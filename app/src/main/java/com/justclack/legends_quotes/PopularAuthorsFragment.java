package com.justclack.legends_quotes;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;

import static com.justclack.legends_quotes.AllCatsModel.site;

/**
 * A simple {@link Fragment} subclass.
 */
public class PopularAuthorsFragment extends Fragment {

    RecyclerView recyclerview;
    ArrayList<AllCatsModel> list = new ArrayList<>();
    String Url = site + "authors/";

    View mainView;

    public PopularAuthorsFragment() {
        // Required empty public constructor
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        mainView = inflater.inflate(R.layout.activity_quotes_display, container, false);
        recyclerview = mainView.findViewById(R.id.recyclerview);
        recyclerview.hasFixedSize();
        recyclerview.setLayoutManager(new LinearLayoutManager(getActivity(), LinearLayoutManager.VERTICAL, false));
        list.add(new AllCatsModel(Url, "a_a_milne"));
        list.add(new AllCatsModel(Url, "a_p_j_abdul_kalam"));
        list.add(new AllCatsModel(Url, "abraham_lincoln"));
        list.add(new AllCatsModel(Url, "abraham_maslow"));
        list.add(new AllCatsModel(Url, "adam_smith"));
        list.add(new AllCatsModel(Url, "adam_west"));
        list.add(new AllCatsModel(Url, "aeschylus"));
        list.add(new AllCatsModel(Url, "aesop"));
        list.add(new AllCatsModel(Url, "agatha_christie"));
        list.add(new AllCatsModel(Url, "alan_watts"));
        list.add(new AllCatsModel(Url, "albert_camus"));
        list.add(new AllCatsModel(Url, "albert_einstein"));
        list.add(new AllCatsModel(Url, "albert_schweitzer"));
        list.add(new AllCatsModel(Url, "aldous_huxley"));
        list.add(new AllCatsModel(Url, "aleksandr_solzhenitsyn"));
        list.add(new AllCatsModel(Url, "alexander_graham_bell"));
        list.add(new AllCatsModel(Url, "alexander_hamilton"));
        list.add(new AllCatsModel(Url, "alexander_pope"));
        list.add(new AllCatsModel(Url, "alexander_the_great"));
        list.add(new AllCatsModel(Url, "alexis_de_tocqueville"));
        list.add(new AllCatsModel(Url, "alfred_hitchcock"));
        list.add(new AllCatsModel(Url, "alfred_lord_tennyson"));
        list.add(new AllCatsModel(Url, "ambrose_bierce"));
        list.add(new AllCatsModel(Url, "amelia_earhart"));
        list.add(new AllCatsModel(Url, "amy_winehouse"));
        list.add(new AllCatsModel(Url, "andrew_carnegie"));
        list.add(new AllCatsModel(Url, "andrew_jackson"));
        list.add(new AllCatsModel(Url, "andy_warhol"));
        list.add(new AllCatsModel(Url, "angela_davis"));
        list.add(new AllCatsModel(Url, "anita_hill"));
        list.add(new AllCatsModel(Url, "anne_frank"));
        list.add(new AllCatsModel(Url, "ansel_adams"));
        list.add(new AllCatsModel(Url, "anthony_bourdain"));
        list.add(new AllCatsModel(Url, "anthony_j_d'angelo"));
        list.add(new AllCatsModel(Url, "antoine_de_saint-exupery"));
        list.add(new AllCatsModel(Url, "aretha_franklin"));
        list.add(new AllCatsModel(Url, "aristotle"));
        list.add(new AllCatsModel(Url, "arnold_schwarzenegger"));
        list.add(new AllCatsModel(Url, "arthur_ashe"));
        list.add(new AllCatsModel(Url, "arthur_schopenhauer"));
        list.add(new AllCatsModel(Url, "audre_lorde"));
        list.add(new AllCatsModel(Url, "audrey_hepburn"));
        list.add(new AllCatsModel(Url, "ayn_rand"));
        list.add(new AllCatsModel(Url, "b_f_skinner"));
        list.add(new AllCatsModel(Url, "barack_obama"));
        list.add(new AllCatsModel(Url, "bell_hooks"));
        list.add(new AllCatsModel(Url, "ben_shapiro"));
        list.add(new AllCatsModel(Url, "benjamin_franklin"));
        list.add(new AllCatsModel(Url, "bertrand_russell"));
        list.add(new AllCatsModel(Url, "beyonce_knowles"));
        list.add(new AllCatsModel(Url, "bill_burr"));
        list.add(new AllCatsModel(Url, "bill_gates"));
        list.add(new AllCatsModel(Url, "bill_murray"));
        list.add(new AllCatsModel(Url, "billie_jean_king"));
        list.add(new AllCatsModel(Url, "billy_graham"));
        list.add(new AllCatsModel(Url, "blaise_pascal"));
        list.add(new AllCatsModel(Url, "bo_burnham"));
        list.add(new AllCatsModel(Url, "bob_dylan"));
        list.add(new AllCatsModel(Url, "bob_marley"));
        list.add(new AllCatsModel(Url, "booker_t_washington"));
        list.add(new AllCatsModel(Url, "brendon_urie"));
        list.add(new AllCatsModel(Url, "brene_brown"));
        list.add(new AllCatsModel(Url, "bruce_lee"));
        list.add(new AllCatsModel(Url, "bruce_springsteen"));
        list.add(new AllCatsModel(Url, "buddha"));
        list.add(new AllCatsModel(Url, "c_authors"));
        list.add(new AllCatsModel(Url, "c_s_lewis"));
        list.add(new AllCatsModel(Url, "calvin_coolidge"));
        list.add(new AllCatsModel(Url, "cardi_b"));
        list.add(new AllCatsModel(Url, "carl_jung"));
        list.add(new AllCatsModel(Url, "carl_sagan"));
        list.add(new AllCatsModel(Url, "carol_burnett"));
        list.add(new AllCatsModel(Url, "cesar_chavez"));
        list.add(new AllCatsModel(Url, "charles_darwin"));
        list.add(new AllCatsModel(Url, "charles_de_montesquieu"));
        list.add(new AllCatsModel(Url, "charles_dickens"));
        list.add(new AllCatsModel(Url, "charles_krauthammer"));
        list.add(new AllCatsModel(Url, "charles_r_swindoll"));
        list.add(new AllCatsModel(Url, "charles_spurgeon"));
        list.add(new AllCatsModel(Url, "charlie_chaplin"));
        list.add(new AllCatsModel(Url, "christopher_columbus"));
        list.add(new AllCatsModel(Url, "christopher_hitchens"));
        list.add(new AllCatsModel(Url, "christopher_mccandless"));
        list.add(new AllCatsModel(Url, "claude_monet"));
        list.add(new AllCatsModel(Url, "clint_eastwood"));
        list.add(new AllCatsModel(Url, "coco_chanel"));
        list.add(new AllCatsModel(Url, "colin_kaepernick"));
        list.add(new AllCatsModel(Url, "colin_powell"));
        list.add(new AllCatsModel(Url, "confucius"));
        list.add(new AllCatsModel(Url, "conor_mcgregor"));
        list.add(new AllCatsModel(Url, "d_authors"));
        list.add(new AllCatsModel(Url, "d_h_lawrence"));
        list.add(new AllCatsModel(Url, "dalai_lama"));
        list.add(new AllCatsModel(Url, "dale_carnegie"));
        list.add(new AllCatsModel(Url, "dan_quayle"));
        list.add(new AllCatsModel(Url, "danny_meyer"));
        list.add(new AllCatsModel(Url, "dave_barry"));
        list.add(new AllCatsModel(Url, "david_bowie"));
        list.add(new AllCatsModel(Url, "deepak_chopra"));
        list.add(new AllCatsModel(Url, "demetri_martin"));
        list.add(new AllCatsModel(Url, "denis_waitley"));
        list.add(new AllCatsModel(Url, "denzel_washington"));
        list.add(new AllCatsModel(Url, "desmond_tutu"));
        list.add(new AllCatsModel(Url, "diogenes"));
        list.add(new AllCatsModel(Url, "dolly_parton"));
        list.add(new AllCatsModel(Url, "dolores_huerta"));
        list.add(new AllCatsModel(Url, "donald_trump"));
        list.add(new AllCatsModel(Url, "douglas_adams"));
        list.add(new AllCatsModel(Url, "douglas_macarthur"));
        list.add(new AllCatsModel(Url, "dr_seuss"));
        list.add(new AllCatsModel(Url, "drake"));
        list.add(new AllCatsModel(Url, "dwight_d_eisenhower"));
        list.add(new AllCatsModel(Url, "e_authors"));
        list.add(new AllCatsModel(Url, "e_e_cummings"));
        list.add(new AllCatsModel(Url, "earl_nightingale"));
        list.add(new AllCatsModel(Url, "eartha_kitt"));
        list.add(new AllCatsModel(Url, "eckhart_tolle"));
        list.add(new AllCatsModel(Url, "edgar_allan_poe"));
        list.add(new AllCatsModel(Url, "edmund_burke"));
        list.add(new AllCatsModel(Url, "elbert_hubbard"));
        list.add(new AllCatsModel(Url, "eleanor_roosevelt"));
        list.add(new AllCatsModel(Url, "elie_wiesel"));
        list.add(new AllCatsModel(Url, "elizabeth_i"));
        list.add(new AllCatsModel(Url, "ellen_degeneres"));
        list.add(new AllCatsModel(Url, "elon_musk"));
        list.add(new AllCatsModel(Url, "elvis_presley"));
        list.add(new AllCatsModel(Url, "emil_zatopek"));
        list.add(new AllCatsModel(Url, "emily_dickinson"));
        list.add(new AllCatsModel(Url, "eminem"));
        list.add(new AllCatsModel(Url, "emma_stone"));
        list.add(new AllCatsModel(Url, "epictetus"));
        list.add(new AllCatsModel(Url, "erma_bombeck"));
        list.add(new AllCatsModel(Url, "ernest_hemingway"));
        list.add(new AllCatsModel(Url, "euripides"));
        list.add(new AllCatsModel(Url, "f_authors"));
        list.add(new AllCatsModel(Url, "f_scott_fitzgerald"));
        list.add(new AllCatsModel(Url, "florence_nightingale"));
        list.add(new AllCatsModel(Url, "frances_farmer"));
        list.add(new AllCatsModel(Url, "francis_bacon"));
        list.add(new AllCatsModel(Url, "francis_of_assisi"));
        list.add(new AllCatsModel(Url, "francois_de_la_rochefoucauld"));
        list.add(new AllCatsModel(Url, "frank_lloyd_wright"));
        list.add(new AllCatsModel(Url, "frank_ocean"));
        list.add(new AllCatsModel(Url, "frank_sinatra"));
        list.add(new AllCatsModel(Url, "frank_zappa"));
        list.add(new AllCatsModel(Url, "franklin_d_roosevelt"));
        list.add(new AllCatsModel(Url, "franz_kafka"));
        list.add(new AllCatsModel(Url, "freddie_mercury"));
        list.add(new AllCatsModel(Url, "frederick_douglass"));
        list.add(new AllCatsModel(Url, "friedrich_nietzsche"));
        list.add(new AllCatsModel(Url, "fyodor_dostoevsky"));
        list.add(new AllCatsModel(Url, "g_authors"));
        list.add(new AllCatsModel(Url, "galileo_galilei"));
        list.add(new AllCatsModel(Url, "george_bernard_shaw"));
        list.add(new AllCatsModel(Url, "george_carlin"));
        list.add(new AllCatsModel(Url, "george_eliot"));
        list.add(new AllCatsModel(Url, "george_orwell"));
        list.add(new AllCatsModel(Url, "george_r_r_martin"));
        list.add(new AllCatsModel(Url, "george_s_patton"));
        list.add(new AllCatsModel(Url, "george_sand"));
        list.add(new AllCatsModel(Url, "george_w_bush"));
        list.add(new AllCatsModel(Url, "george_washington"));
        list.add(new AllCatsModel(Url, "george_washington_carver"));
        list.add(new AllCatsModel(Url, "georgia_o'keeffe"));
        list.add(new AllCatsModel(Url, "gilbert_k_chesterton"));
        list.add(new AllCatsModel(Url, "gloria_steinem"));
        list.add(new AllCatsModel(Url, "gordon_ramsay"));
        list.add(new AllCatsModel(Url, "gore_vidal"));
        list.add(new AllCatsModel(Url, "groucho_marx"));
        list.add(new AllCatsModel(Url, "guy_lafleur"));
        list.add(new AllCatsModel(Url, "h_authors"));
        list.add(new AllCatsModel(Url, "h_g_wells"));
        list.add(new AllCatsModel(Url, "h_jackson_brown_jr"));
        list.add(new AllCatsModel(Url, "h_l_mencken"));
        list.add(new AllCatsModel(Url, "h_p_lovecraft"));
        list.add(new AllCatsModel(Url, "harriet_tubman"));
        list.add(new AllCatsModel(Url, "harry_s_truman"));
        list.add(new AllCatsModel(Url, "helen_keller"));
        list.add(new AllCatsModel(Url, "henny_youngman"));
        list.add(new AllCatsModel(Url, "henry_david_thoreau"));
        list.add(new AllCatsModel(Url, "henry_ford"));
        list.add(new AllCatsModel(Url, "henry_rollins"));
        list.add(new AllCatsModel(Url, "henry_wadsworth_longfellow"));
        list.add(new AllCatsModel(Url, "heraclitus"));
        list.add(new AllCatsModel(Url, "hillary_clinton"));
        list.add(new AllCatsModel(Url, "hippocrates"));
        list.add(new AllCatsModel(Url, "honore_de_balzac"));
        list.add(new AllCatsModel(Url, "hubert_h_humphrey"));
        list.add(new AllCatsModel(Url, "hunter_s_thompson"));
        list.add(new AllCatsModel(Url, "i_authors"));
        list.add(new AllCatsModel(Url, "immanuel_kant"));
        list.add(new AllCatsModel(Url, "isaac_asimov"));
        list.add(new AllCatsModel(Url, "isaac_newton"));
        list.add(new AllCatsModel(Url, "j_authors"));
        list.add(new AllCatsModel(Url, "j_k_rowling"));
        list.add(new AllCatsModel(Url, "j_r_r_tolkien"));
        list.add(new AllCatsModel(Url, "jack_kerouac"));
        list.add(new AllCatsModel(Url, "jack_ma"));
        list.add(new AllCatsModel(Url, "jack_welch"));
        list.add(new AllCatsModel(Url, "jackie_robinson"));
        list.add(new AllCatsModel(Url, "james_a_baldwin"));
        list.add(new AllCatsModel(Url, "james_joyce"));
        list.add(new AllCatsModel(Url, "james_madison"));
        list.add(new AllCatsModel(Url, "jane_austen"));
        list.add(new AllCatsModel(Url, "jane_goodall"));
        list.add(new AllCatsModel(Url, "jay-z"));
        list.add(new AllCatsModel(Url, "jean_piaget"));
        list.add(new AllCatsModel(Url, "jean-jacques_rousseau"));
        list.add(new AllCatsModel(Url, "jean-michel_basquiat"));
        list.add(new AllCatsModel(Url, "jean-paul_sartre"));
        list.add(new AllCatsModel(Url, "jeff_bezos"));
        list.add(new AllCatsModel(Url, "jenn_proske"));
        list.add(new AllCatsModel(Url, "jeremy_irons"));
        list.add(new AllCatsModel(Url, "jerry_seinfeld"));
        list.add(new AllCatsModel(Url, "jesus_christ"));
        list.add(new AllCatsModel(Url, "jiddu_krishnamurti"));
        list.add(new AllCatsModel(Url, "jim_carrey"));
        list.add(new AllCatsModel(Url, "jim_morrison"));
        list.add(new AllCatsModel(Url, "jim_rohn"));
        list.add(new AllCatsModel(Url, "jim_valvano"));
        list.add(new AllCatsModel(Url, "jimi_hendrix"));
        list.add(new AllCatsModel(Url, "jimmy_buffett"));
        list.add(new AllCatsModel(Url, "jimmy_fallon"));
        list.add(new AllCatsModel(Url, "joan_rivers"));
        list.add(new AllCatsModel(Url, "joel_osteen"));
        list.add(new AllCatsModel(Url, "johann_wolfgang_von_goethe"));
        list.add(new AllCatsModel(Url, "john_adams"));
        list.add(new AllCatsModel(Url, "john_c_maxwell"));
        list.add(new AllCatsModel(Url, "john_d_rockefeller"));
        list.add(new AllCatsModel(Url, "john_dewey"));
        list.add(new AllCatsModel(Url, "john_f_kennedy"));
        list.add(new AllCatsModel(Url, "john_keats"));
        list.add(new AllCatsModel(Url, "john_lennon"));
        list.add(new AllCatsModel(Url, "john_locke"));
        list.add(new AllCatsModel(Url, "john_mccain"));
        list.add(new AllCatsModel(Url, "john_muir"));
        list.add(new AllCatsModel(Url, "john_mulaney"));
        list.add(new AllCatsModel(Url, "john_steinbeck"));
        list.add(new AllCatsModel(Url, "john_stuart_mill"));
        list.add(new AllCatsModel(Url, "john_wayne"));
        list.add(new AllCatsModel(Url, "john_wooden"));
        list.add(new AllCatsModel(Url, "johnny_cash"));
        list.add(new AllCatsModel(Url, "johnny_depp"));
        list.add(new AllCatsModel(Url, "joseph_b_wirthlin"));
        list.add(new AllCatsModel(Url, "joseph_campbell"));
        list.add(new AllCatsModel(Url, "joseph_stalin"));
        list.add(new AllCatsModel(Url, "joyce_brothers"));
        list.add(new AllCatsModel(Url, "joyce_meyer"));
        list.add(new AllCatsModel(Url, "julius_caesar"));
        list.add(new AllCatsModel(Url, "k_authors"));
        list.add(new AllCatsModel(Url, "kanye_west"));
        list.add(new AllCatsModel(Url, "karl_marx"));
        list.add(new AllCatsModel(Url, "kate_adie"));
        list.add(new AllCatsModel(Url, "katharine_hepburn"));
        list.add(new AllCatsModel(Url, "keanu_reeves"));
        list.add(new AllCatsModel(Url, "kevin_gates"));
        list.add(new AllCatsModel(Url, "kevin_hart"));
        list.add(new AllCatsModel(Url, "khalil_gibran"));
        list.add(new AllCatsModel(Url, "kim_kardashian"));
        list.add(new AllCatsModel(Url, "kobe_bryant"));
        list.add(new AllCatsModel(Url, "kofi_annan"));
        list.add(new AllCatsModel(Url, "kurt_cobain"));
        list.add(new AllCatsModel(Url, "kurt_vonnegut"));
        list.add(new AllCatsModel(Url, "l_authors"));
        list.add(new AllCatsModel(Url, "lady_gaga"));
        list.add(new AllCatsModel(Url, "langston_hughes"));
        list.add(new AllCatsModel(Url, "lao_tzu"));
        list.add(new AllCatsModel(Url, "lebron_james"));
        list.add(new AllCatsModel(Url, "leo_buscaglia"));
        list.add(new AllCatsModel(Url, "leo_tolstoy"));
        list.add(new AllCatsModel(Url, "leonard_cohen"));
        list.add(new AllCatsModel(Url, "leonardo_da_vinci"));
        list.add(new AllCatsModel(Url, "les_brown"));
        list.add(new AllCatsModel(Url, "lewis_carroll"));
        list.add(new AllCatsModel(Url, "lil_uzi_vert"));
        list.add(new AllCatsModel(Url, "lil_wayne"));
        list.add(new AllCatsModel(Url, "linus_torvalds"));
        list.add(new AllCatsModel(Url, "lord_byron"));
        list.add(new AllCatsModel(Url, "lou_holtz"));
        list.add(new AllCatsModel(Url, "louis_xiv"));
        list.add(new AllCatsModel(Url, "lucille_ball"));
        list.add(new AllCatsModel(Url, "lucius_annaeus_seneca"));
        list.add(new AllCatsModel(Url, "ludwig_van_beethoven"));
        list.add(new AllCatsModel(Url, "lyndon_b_johnson"));
        list.add(new AllCatsModel(Url, "m_authors"));
        list.add(new AllCatsModel(Url, "mac_miller"));
        list.add(new AllCatsModel(Url, "mae_west"));
        list.add(new AllCatsModel(Url, "mahatma_gandhi"));
        list.add(new AllCatsModel(Url, "malala_yousafzai"));
        list.add(new AllCatsModel(Url, "malcolm_x"));
        list.add(new AllCatsModel(Url, "marcus_aurelius"));
        list.add(new AllCatsModel(Url, "marcus_garvey"));
        list.add(new AllCatsModel(Url, "marcus_tullius_cicero"));
        list.add(new AllCatsModel(Url, "margaret_mead"));
        list.add(new AllCatsModel(Url, "margaret_thatcher"));
        list.add(new AllCatsModel(Url, "maria_montessori"));
        list.add(new AllCatsModel(Url, "marie_curie"));
        list.add(new AllCatsModel(Url, "marilyn_manson"));
        list.add(new AllCatsModel(Url, "marilyn_monroe"));
        list.add(new AllCatsModel(Url, "mark_cuban"));
        list.add(new AllCatsModel(Url, "mark_twain"));
        list.add(new AllCatsModel(Url, "mark_zuckerberg"));
        list.add(new AllCatsModel(Url, "marquis_de_lafayette"));
        list.add(new AllCatsModel(Url, "martin_luther"));
        list.add(new AllCatsModel(Url, "martin_luther_king_jr"));
        list.add(new AllCatsModel(Url, "mary_wollstonecraft"));
        list.add(new AllCatsModel(Url, "matthew_mcconaughey"));
        list.add(new AllCatsModel(Url, "maya_angelou"));
        list.add(new AllCatsModel(Url, "meek_mill"));
        list.add(new AllCatsModel(Url, "michael_jackson"));
        list.add(new AllCatsModel(Url, "michael_jordan"));
        list.add(new AllCatsModel(Url, "michel_de_montaigne"));
        list.add(new AllCatsModel(Url, "michelangelo"));
        list.add(new AllCatsModel(Url, "michelle_obama"));
        list.add(new AllCatsModel(Url, "mike_tyson"));
        list.add(new AllCatsModel(Url, "milton_friedman"));
        list.add(new AllCatsModel(Url, "mitch_hedberg"));
        list.add(new AllCatsModel(Url, "mother_teresa"));
        list.add(new AllCatsModel(Url, "muhammad_ali"));
        list.add(new AllCatsModel(Url, "n_authors"));
        list.add(new AllCatsModel(Url, "napoleon_bonaparte"));
        list.add(new AllCatsModel(Url, "napoleon_hill"));
        list.add(new AllCatsModel(Url, "nas"));
        list.add(new AllCatsModel(Url, "neil_degrasse_tyson"));
        list.add(new AllCatsModel(Url, "nelson_mandela"));
        list.add(new AllCatsModel(Url, "niccolo_machiavelli"));
        list.add(new AllCatsModel(Url, "nikola_tesla"));
        list.add(new AllCatsModel(Url, "nina_simone"));
        list.add(new AllCatsModel(Url, "noam_chomsky"));
        list.add(new AllCatsModel(Url, "noel_coward"));
        list.add(new AllCatsModel(Url, "norman_vincent_peale"));
        list.add(new AllCatsModel(Url, "nuno_bettencourt"));
        list.add(new AllCatsModel(Url, "o_authors"));
        list.add(new AllCatsModel(Url, "og_mandino"));
        list.add(new AllCatsModel(Url, "oprah_winfrey"));
        list.add(new AllCatsModel(Url, "oscar_wilde"));
        list.add(new AllCatsModel(Url, "p_authors"));
        list.add(new AllCatsModel(Url, "p_j_o'rourke"));
        list.add(new AllCatsModel(Url, "p_t_barnum"));
        list.add(new AllCatsModel(Url, "pablo_picasso"));
        list.add(new AllCatsModel(Url, "patrick_henry"));
        list.add(new AllCatsModel(Url, "paul_mccartney"));
        list.add(new AllCatsModel(Url, "paulo_coelho"));
        list.add(new AllCatsModel(Url, "pele"));
        list.add(new AllCatsModel(Url, "peter_drucker"));
        list.add(new AllCatsModel(Url, "phil_mcgraw"));
        list.add(new AllCatsModel(Url, "plato"));
        list.add(new AllCatsModel(Url, "pope_francis"));
        list.add(new AllCatsModel(Url, "post_malone"));
        list.add(new AllCatsModel(Url, "prince"));
        list.add(new AllCatsModel(Url, "q_authors"));
        list.add(new AllCatsModel(Url, "queen_elizabeth_ii"));
        list.add(new AllCatsModel(Url, "r_authors"));
        list.add(new AllCatsModel(Url, "rabindranath_tagore"));
        list.add(new AllCatsModel(Url, "rainer_maria_rilke"));
        list.add(new AllCatsModel(Url, "ralph_waldo_emerson"));
        list.add(new AllCatsModel(Url, "ram_dass"));
        list.add(new AllCatsModel(Url, "ray_bradbury"));
        list.add(new AllCatsModel(Url, "rene_descartes"));
        list.add(new AllCatsModel(Url, "richard_bach"));
        list.add(new AllCatsModel(Url, "richard_branson"));
        list.add(new AllCatsModel(Url, "rihanna"));
        list.add(new AllCatsModel(Url, "robert_a_heinlein"));
        list.add(new AllCatsModel(Url, "robert_baden-powell"));
        list.add(new AllCatsModel(Url, "robert_e_lee"));
        list.add(new AllCatsModel(Url, "robert_frost"));
        list.add(new AllCatsModel(Url, "robert_green_ingersoll"));
        list.add(new AllCatsModel(Url, "robert_kennedy"));
        list.add(new AllCatsModel(Url, "robert_kiyosaki"));
        list.add(new AllCatsModel(Url, "robin_williams"));
        list.add(new AllCatsModel(Url, "rodney_dangerfield"));
        list.add(new AllCatsModel(Url, "ronald_reagan"));
        list.add(new AllCatsModel(Url, "rosa_parks"));
        list.add(new AllCatsModel(Url, "rumi"));
        list.add(new AllCatsModel(Url, "ruth_bader_ginsburg"));
        list.add(new AllCatsModel(Url, "s_authors"));
        list.add(new AllCatsModel(Url, "saint_augustine"));
        list.add(new AllCatsModel(Url, "saint_teresa_of_avila"));
        list.add(new AllCatsModel(Url, "salvador_dali"));
        list.add(new AllCatsModel(Url, "sam_walton"));
        list.add(new AllCatsModel(Url, "samuel_adams"));
        list.add(new AllCatsModel(Url, "samuel_johnson"));
        list.add(new AllCatsModel(Url, "sandra_cisneros"));
        list.add(new AllCatsModel(Url, "satchel_paige"));
        list.add(new AllCatsModel(Url, "serena_williams"));
        list.add(new AllCatsModel(Url, "shiv_khera"));
        list.add(new AllCatsModel(Url, "sigmund_freud"));
        list.add(new AllCatsModel(Url, "simon_sinek"));
        list.add(new AllCatsModel(Url, "snoop_dogg"));
        list.add(new AllCatsModel(Url, "socrates"));
        list.add(new AllCatsModel(Url, "sofia_vergara"));
        list.add(new AllCatsModel(Url, "sonia_sotomayor"));
        list.add(new AllCatsModel(Url, "sophia_loren"));
        list.add(new AllCatsModel(Url, "sophocles"));
        list.add(new AllCatsModel(Url, "soren_kierkegaard"));
        list.add(new AllCatsModel(Url, "st_jerome"));
        list.add(new AllCatsModel(Url, "stephen_covey"));
        list.add(new AllCatsModel(Url, "stephen_hawking"));
        list.add(new AllCatsModel(Url, "stephen_king"));
        list.add(new AllCatsModel(Url, "steve_harvey"));
        list.add(new AllCatsModel(Url, "steve_irwin"));
        list.add(new AllCatsModel(Url, "steve_jobs"));
        list.add(new AllCatsModel(Url, "steve_martin"));
        list.add(new AllCatsModel(Url, "steven_wright"));
        list.add(new AllCatsModel(Url, "sun_tzu"));
        list.add(new AllCatsModel(Url, "susan_b_anthony"));
        list.add(new AllCatsModel(Url, "swami_vivekananda"));
        list.add(new AllCatsModel(Url, "sylvia_plath"));
        list.add(new AllCatsModel(Url, "t_authors"));
        list.add(new AllCatsModel(Url, "t_s_eliot"));
        list.add(new AllCatsModel(Url, "taylor_swift"));
        list.add(new AllCatsModel(Url, "terry_pratchett"));
        list.add(new AllCatsModel(Url, "theodore_roosevelt"));
        list.add(new AllCatsModel(Url, "thich_nhat_hanh"));
        list.add(new AllCatsModel(Url, "thomas_a_edison"));
        list.add(new AllCatsModel(Url, "thomas_aquinas"));
        list.add(new AllCatsModel(Url, "thomas_hobbes"));
        list.add(new AllCatsModel(Url, "thomas_jefferson"));
        list.add(new AllCatsModel(Url, "thomas_merton"));
        list.add(new AllCatsModel(Url, "thomas_paine"));
        list.add(new AllCatsModel(Url, "thomas_sowell"));
        list.add(new AllCatsModel(Url, "tiger_woods"));
        list.add(new AllCatsModel(Url, "tim_burton"));
        list.add(new AllCatsModel(Url, "tom_brady"));
        list.add(new AllCatsModel(Url, "toni_morrison"));
        list.add(new AllCatsModel(Url, "tony_robbins"));
        list.add(new AllCatsModel(Url, "travis_scott"));
        list.add(new AllCatsModel(Url, "tupac_shakur"));
        list.add(new AllCatsModel(Url, "twiggy"));
        list.add(new AllCatsModel(Url, "tyler_the_creator"));
        list.add(new AllCatsModel(Url, "u_authors"));
        list.add(new AllCatsModel(Url, "ulysses_s_grant"));
        list.add(new AllCatsModel(Url, "unknown"));
        list.add(new AllCatsModel(Url, "v_authors"));
        list.add(new AllCatsModel(Url, "victor_hugo"));
        list.add(new AllCatsModel(Url, "viktor_e_frankl"));
        list.add(new AllCatsModel(Url, "vince_lombardi"));
        list.add(new AllCatsModel(Url, "vincent_van_gogh"));
        list.add(new AllCatsModel(Url, "virginia_woolf"));
        list.add(new AllCatsModel(Url, "vladimir_lenin"));
        list.add(new AllCatsModel(Url, "vladimir_putin"));
        list.add(new AllCatsModel(Url, "voltaire"));
        list.add(new AllCatsModel(Url, "w_authors"));
        list.add(new AllCatsModel(Url, "w_c_fields"));
        list.add(new AllCatsModel(Url, "w_e_b_du_bois"));
        list.add(new AllCatsModel(Url, "w_edwards_deming"));
        list.add(new AllCatsModel(Url, "walt_disney"));
        list.add(new AllCatsModel(Url, "walt_whitman"));
        list.add(new AllCatsModel(Url, "walter_scott"));
        list.add(new AllCatsModel(Url, "warren_buffett"));
        list.add(new AllCatsModel(Url, "wayne_dyer"));
        list.add(new AllCatsModel(Url, "wayne_gretzky"));
        list.add(new AllCatsModel(Url, "will_rogers"));
        list.add(new AllCatsModel(Url, "will_smith"));
        list.add(new AllCatsModel(Url, "william_arthur_ward"));
        list.add(new AllCatsModel(Url, "william_blake"));
        list.add(new AllCatsModel(Url, "william_butler_yeats"));
        list.add(new AllCatsModel(Url, "william_golding"));
        list.add(new AllCatsModel(Url, "william_james"));
        list.add(new AllCatsModel(Url, "william_shakespeare"));
        list.add(new AllCatsModel(Url, "william_wordsworth"));
        list.add(new AllCatsModel(Url, "willie_nelson"));
        list.add(new AllCatsModel(Url, "winston_churchill"));
        list.add(new AllCatsModel(Url, "woody_allen"));
        list.add(new AllCatsModel(Url, "y_authors"));
        list.add(new AllCatsModel(Url, "yayoi_kusama"));
        list.add(new AllCatsModel(Url, "yogi_berra"));
        list.add(new AllCatsModel(Url, "yoko_ono"));
        list.add(new AllCatsModel(Url, "z_authors"));
        list.add(new AllCatsModel(Url, "zig_ziglar"));
        list.add(new AllCatsModel(Url, "zora_neale_hurston"));
        recyclerview.setAdapter(new Cats_Main_Adapter(list, getActivity()));
        return mainView;
    }
}